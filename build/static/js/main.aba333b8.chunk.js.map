{"version":3,"sources":["components/SearchBar.js","components/Card.js","components/Movies.js","components/MovieFilter.js","components/Favourites.js","components/Modal.js","components/Pagination.js","App.js","index.js"],"names":["SearchBar","props","useState","searchquery","setsearchquery","className","type","placeholder","value","onChange","event","target","onClick","preventDefault","query","console","log","fetch","api_key","then","data","json","onsearch","Card","style","Title","src","poster","alt","rating","releasedate","onOpenModal","Movies","displayMovies","items","length","map","Moviesarr","onopenmodal","original_title","Description","overview","vote_average","release_date","poster_path","MovieFilter","genrequery","setGenrequery","class","Gquery","Favourites","Modal","Pagination","currentPage","setCurrentPage","pageHandler","totalpages","App","setMoviesarr","pages","setPages","OpenModal","setModal","getMovieRequest","url","process","response","responsejson","results","useEffect","total_pages","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aba333b8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Searchbar.css';\r\nconst SearchBar=(props)=>{\r\n    const[searchquery,setsearchquery]=useState('');\r\n\r\n    const searchChangeHandler=(event)=>{\r\n        setsearchquery(event.target.value);\r\n    }\r\n\r\n    const searchHandler=(event)=>{\r\n        event.preventDefault();\r\n        if(searchquery===\"\"){\r\n            return ;\r\n        }\r\n        const query=searchquery;\r\n        console.log(query);\r\n        \r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${props.api_key}&query=${query}`)\r\n        .then(data=>data.json())\r\n        .then(data=>{props.onsearch(data)})\r\n        console.log(query);\r\n        setsearchquery('');\r\n    };\r\n\r\n    return(\r\n\r\n        <form className='search-bar'>\r\n            <input type=\"text\" placeholder=\"search\" value={searchquery} onChange={searchChangeHandler}></input>\r\n            <button type=\"submit\" onClick={searchHandler}></button>\r\n        </form>\r\n    )\r\n}\r\nexport default SearchBar;","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card=(props)=> {\r\n\r\n    return (\r\n        <div className=\"card\" style={{\r\n            //backgroundImage: `url(https://image.tmdb.org/t/p/w500/${props.poster})`\r\n          }}>\r\n            <header className='header'>\r\n                <h2>{props.Title}</h2>\r\n            </header>\r\n\r\n            <section className='card_img'>\r\n                <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`} alt=\"\" className='poster'></img>\r\n            </section>\r\n\r\n\r\n            <section className='rating_date'>\r\n                <p className='p'> {props.rating} </p>\r\n                <h4 className='h4'> {props.releasedate} </h4>\r\n            </section> \r\n\r\n            <section>\r\n                <button onClick={props.onOpenModal}>Details</button>\r\n                <button>Favorite</button>\r\n            </section>\r\n         \r\n        </div>\r\n    )}\r\n\r\n\r\nexport default Card;","import Card from \"./Card\";\r\nimport React, { Fragment } from \"react\";\r\nconst Movies=(props)=>{\r\n    const displayMovies= props.items;\r\n    return(\r\n    <Fragment>\r\n        {displayMovies.length>0 && displayMovies.map((Moviesarr)=>\r\n        <Card\r\n        onOpenModal={props.onopenmodal}\r\n        Title={Moviesarr.original_title}\r\n        Description={Moviesarr.overview}\r\n        rating={Moviesarr.vote_average}\r\n        releasedate={Moviesarr.release_date}\r\n        poster={Moviesarr.poster_path}\r\n        />)}\r\n    </Fragment>\r\n    )\r\n}\r\nexport default Movies;","import './MovieFilter.css';\r\nimport React, { useState } from 'react';\r\nconst MovieFilter = (props) => {\r\n\r\n    const [genrequery,setGenrequery]=useState('');\r\n\r\n\r\n    const filterHandler=(event)=>{\r\n        setGenrequery(event.target.value);\r\n        event.preventDefault();\r\n        const Gquery=genrequery;\r\n        console.log(Gquery);\r\n        setGenrequery('');\r\n    }\r\n\r\n\r\n    return (\r\n        <button className=\"dropbtn\">Genre filter\r\n            <select class=\"dropdown-content\" onChange={filterHandler}>\r\n                <option value='Action'>Action</option>\r\n                <option value='Horror'>Horror</option>\r\n                <option value='Comedy'>Comedy</option>\r\n                <option value='Western'>Western</option>\r\n                <option value='Sci-fi'>Sci-fi</option>\r\n                <option value='Thriller'>Thriller</option>\r\n                <option value='Drama'>Drama</option>\r\n                <option value='Fantasy'>Fantasy</option>\r\n            </select>\r\n        </button>\r\n        \r\n    )\r\n}\r\nexport default MovieFilter; ","const Favourites=()=>{\r\n\r\n}\r\nexport default Favourites;","import React, { Fragment } from \"react\";\r\nimport './Modal.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Fragment>\r\n        <section className=\"main\">\r\n            <section className=\"modal\">\r\n                <section>\r\n                    <h1>{props.Title}</h1>\r\n                    <h3>{props.releasedate}</h3>\r\n                </section>\r\n                <section>\r\n                    <p>{props.Description}</p>\r\n                </section>\r\n                <section>\r\n                    <h1>Actors</h1>\r\n                </section>\r\n            </section>\r\n        </section>\r\n        </Fragment >\r\n    )\r\n}\r\nexport default Modal;","import React, { Fragment } from \"react\";\r\nimport './Pagination.css';\r\nimport { useState } from \"react\";\r\nconst Pagination=(props)=>{\r\n\r\n    const [currentPage,setCurrentPage]=useState(1);\r\n\r\n    const pageHandler=(event)=>{\r\n        if(event.target.value===\"next\" && currentPage<props.totalpages){\r\n            setCurrentPage(currentPage+1);\r\n\r\n        }\r\n\r\n        if(event.target.value===\"prev\" && currentPage>1){\r\n            setCurrentPage(currentPage-1);\r\n        }\r\n\r\n        if(event.target.value===\"last\"){\r\n            setCurrentPage(props.totalpages);\r\n        }\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <section className=\"pgn\">\r\n          <button className=\"page\">1</button>\r\n          <button className=\"page\" value=\"prev\" onClick={pageHandler}>prev</button>\r\n          <button className=\"page\">{currentPage}</button>\r\n          <button className=\"page\" value=\"next\" onClick={pageHandler}>next</button>\r\n          <button className=\"page\" value=\"last\" onClick={pageHandler}>{props.totalpages}</button>\r\n        </section>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { Fragment, useState,useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport Movies from './components/Movies';\nimport MovieFilter from './components/MovieFilter';\nimport Favourites from './components/Favourites';\nimport Modal from './components/Modal';\nimport './App.css';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n\n  const[Moviesarr,setMoviesarr]=useState([]);\n  const[pages,setPages]=useState('')\n  const[OpenModal,setModal]=useState(false)\n\n  const searchResultHandler=(data)=>{\n    console.log(data);\n    setMoviesarr([...data.results]);\n    setPages(data.total_pages);\n  };\n\n  const getMovieRequest=async()=>{\n    const url=`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_API}`\n    const response=await fetch(url);\n    const responsejson=await response.json();\n    setMoviesarr(responsejson.results);\n  }\n  useEffect(()=>{\n    getMovieRequest();\n  },[])\n\n  const ModalHandler=()=>{\n    setModal(true);\n  }\n\n  if(OpenModal) {\n    return(\n      <Modal></Modal>\n    )\n  }\n\n  return (\n    <Fragment>\n      <article className='container'>\n\n      <section className='header-area'>\n      <SearchBar api_key={process.env.REACT_APP_API} \n      onsearch={searchResultHandler}></SearchBar>\n      </section>\n      \n      \n      <aside className='filter-area'>\n      <MovieFilter></MovieFilter>\n      <Favourites></Favourites>\n      </aside>\n      <div><h1 className='h1'>Top Rated Movies</h1></div>\n      <article className='list-area'>\n      <Movies items={Moviesarr} onopenmodal={ModalHandler}></Movies>\n\n      <section className='pgn'>\n      <Pagination totalpages={pages}></Pagination>\n      </section>\n\n      </article>\n\n      \n\n      \n      </article>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}